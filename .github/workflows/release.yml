name: Release
run-name: Building and Publishing a Release
on:
  push:
    tags:
      - v*
    branches:
      - master

permissions:
  attestations: write
  contents: write
  id-token: write
  pages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install System Deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libasound2-dev libudev-dev libpipewire-0.3-dev libspa-0.2-dev
      - name: Install Rust Toolchain
        run: |
          rustup toolchain install nightly
          rustup target add wasm32-unknown-unknown
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
          rustup component add rust-std-wasm32-unknown-unknown
          rustup update
          rustc --version
          rustup --version
          cargo --version
          rustup component list --installed
      - name: Install Tools
        run: |
          cargo install wasm-bindgen-cli
          cargo install wasm-pack
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test
        run: |
          cargo test --release -p nes || true
      - name: Build
        run: |
          cargo xtask release
      - name: Upload Build Artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Download Artifact
        id: download
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: build
      - name: Extract Artifact
        run: |
          mkdir dist
          tar -xf build/artifact.tar -C dist
      - name: Attest
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: "dist/*"
      - name: Release
        run: |
          gh release create $GITHUB_REF_NAME --draft --verify-tag
          gh release upload $GITHUB_REF_NAME dist/* --clobber
          gh release edit $GITHUB_REF_NAME --draft=false --latest
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}

  deploy-web:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ ! startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Trigger NickMass.com Deployment
        uses: distributhor/workflow-webhook@v3
        with:
          webhook_url: https://nickmass.com/hooks/deploy
          webhook_secret: ${{ secrets.WEBHOOK_DEPLOY_SECRET }}
          webhook_auth: ${{ secrets.WEBHOOK_DEPLOY_CLIENT_ID }}
